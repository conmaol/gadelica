match (n) detach delete n

match (a)-[b]->(c) return a,b,c

create constraint
for (ip:Inter)
require ip.uid is unique

show constraints

drop constraint [name]

load csv with headers
from 'https://github.com/conmaol/gadelica/blob/master/csv/1.nodes.csv?raw=true' as nxt
merge (ip:Inter {uid: nxt.uid})

load csv with headers
from 'https://github.com/conmaol/gadelica/blob/master/csv/1.alphabetic.csv?raw=true' as nxt
match (ip1:Inter {uid: nxt.from})
match (ip2:Inter {uid: nxt.to})
merge (ip1)-[:ALPHABETIC {value: nxt.value, case: nxt.case, accent: nxt.accent}]->(ip2)

load csv with headers
from 'https://github.com/conmaol/gadelica/blob/master/csv/1.spaces.csv?raw=true' as nxt
match (ip1:Inter {uid: nxt.from})
match (ip2:Inter {uid: nxt.to})
merge (ip1)-[:SPACE {value: nxt.value}]->(ip2)

load csv with headers
from 'https://github.com/conmaol/gadelica/blob/master/csv/1.punctuation.csv?raw=true' as nxt
match (ip1:Inter {uid: nxt.from})
match (ip2:Inter {uid: nxt.to})
merge (ip1)-[:PUNCTUATION {value: nxt.value}]->(ip2)

load csv with headers
from 'https://github.com/conmaol/gadelica/blob/master/csv/1.digits.csv?raw=true' as nxt
match (ip1:Inter {uid: nxt.from})
match (ip2:Inter {uid: nxt.to})
merge (ip1)-[:DIGIT {value: nxt.value}]->(ip2)

load csv with headers
from 'https://github.com/conmaol/gadelica/blob/master/csv/1.digits.csv?raw=true' as nxt
match (ip1:Inter {uid: nxt.from})
match (ip2:Inter {uid: nxt.to})
merge (ip1)-[:DIGIT {value: nxt.value}]->(ip2)